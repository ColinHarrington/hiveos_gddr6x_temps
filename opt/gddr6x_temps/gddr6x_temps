#!/usr/bin/env bash

GDDR6X_TEMP_FILE="/run/hive/gddr6x_temp.json"
GPU_STATS_JSON="/run/hive/gpu-stats.json"
GPU_STATS_TEMP_FILE="/run/hive/gpu-stats.json.patched"
RUNNING_FLAG="/run/hive/MINER_RUN"

# T-REX
# Example: GPU #1: RTX 3080 - 101.56 MH/s,              [T:42/78C, P:228W, F:100%, E:505kH/W], 1/1 R:0% I:0%
#
TREX_LOG_FILE="/var/log/miner/t-rex/t-rex.log"
TREX_REGEXP="s/GPU #[ ]*\([0-9]\{1,2\}\): RTX 30[8-9]0.*[ \t]*\[T:[0-9]\{1,3\}\/\([0-9]\{1,3\}\)C,.*/\1,\2/p"

# GMINER
# Example: |  1  3080  45/80 100 % 1245 10601    *     N/A    * |
#
GMINER_LOG_FILE="/var/log/miner/gminer/gminer.log"
GMINER_REGEXP="s/|[ ]*\([0-9]\)\{1,2\}[ ]*30[8-9]0.*[0-9]\{1,3\}\/\([0-9]\{1,3\}\).*/\1,\2/p"

function init() {
    nvidia_indexes_array=$(cat "${GPU_STATS_JSON}" 2>/dev/null | jq -c '[ .brand | to_entries[] | select(.value == "nvidia") | .key ]')
    if [ "${nvidia_indexes_array}" = "" ] || [ "$nvidia_indexes_array" = "[]" ]; then
        exit 1
    fi

    rm -f "${GDDR6X_TEMP_FILE}"
}

function process_log() {
    local log_file=$1
    local regexp=$2

    if [ -f "${RUNNING_FLAG}" ] && [ -f "$log_file" ]; then
        local stats=$(tail -n 100 "${log_file}" | sed -ne "${regexp}")
        for x in $stats; do
            local k=$(echo $nvidia_indexes_array | jq -c ".[${x%%,*}]")
            local v=${x#*,}
            cat <<< $(jq -c ".[$k] = \"$v\"" "${GDDR6X_TEMP_FILE}") > ${GDDR6X_TEMP_FILE}
        done
    else
        if [ -f "${GDDR6X_TEMP_FILE}" ]; then
            rm -f "${GDDR6X_TEMP_FILE}"
        fi
    fi
}

function process_gminer_log() {
    process_log "${GMINER_LOG_FILE}" "${GMINER_REGEXP}"
}

function process_trex_log() {
    process_log "${TREX_LOG_FILE}" "${TREX_REGEXP}"
}

function patch_stats() {
    if [ -f "${GDDR6X_TEMP_FILE}" ]; then
        cat <<< $(jq -c ".mtemp = $(cat "${GDDR6X_TEMP_FILE}" | tr '"' '\"')" ${GPU_STATS_JSON}) > ${GPU_STATS_JSON}
    fi
}

function loop() {
    while [[ TRUE ]]; do
        inotifywait -qq "$GPU_STATS_JSON"

        patch_stats

        cat "$GPU_STATS_JSON" 2>/dev/null | jq -c ' . | if has("mtemp") then .mtemp else (.temp | .[]=0) end' > ${GDDR6X_TEMP_FILE}
        most_recent_log_file=$(ls -t ${GMINER_LOG_FILE} ${TREX_LOG_FILE} 2>/dev/null | head -1)

        if [ "${most_recent_log_file}" = "${GMINER_LOG_FILE}" ]; then
            process_gminer_log
        elif [ "${most_recent_log_file}" = "${TREX_LOG_FILE}" ]; then
            process_trex_log
        fi

        patch_stats
    done
}

init
loop